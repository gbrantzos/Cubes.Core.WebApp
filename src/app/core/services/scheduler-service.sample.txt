const details: SchedulerStatus = {
  "schedulerState": "Active",
  "serverTime": "2019-12-13T13:56:38.8437913+02:00",
  "jobs": [
    {
        "name": "Dummy job",
        "active": false,
        "cronExpression": "0/50 * * ? * *",
        "cronExpressionDescription": "every 50 seconds",
        "jobType": "Cubes.Core.Scheduling.Jobs.ExecuteRequestJob",
        "previousFireTime": null,
        "nextFireTime": null,
        "lastExecutionFailed": true,
        "failureMessage": "Job threw an unhandled exception.\r\n(Line: 1, Col: 1, Idx: 0) - (Line: 1, Col: 9, Idx: 8): Exception during deserialization\r\nInvalid cast from 'System.String' to 'Cubes.Core.Commands.Basic.RunOsProcess'."
    },
    {
        "name": "New scheduler job - 1",
        "active": false,
        "cronExpression": "0 0 10 ? * *",
        "cronExpressionDescription": "at 10:00 AM",
        "jobType": "Cubes.Core.Scheduling.Jobs.ExecuteRequestJob",
        "previousFireTime": null,
        "nextFireTime": null,
        "lastExecutionFailed": false
    },
    {
        "name": "Sample Job",
        "active": false,
        "cronExpression": "0/45 * * * * ?",
        "cronExpressionDescription": "every 45 seconds",
        "jobType": "Cubes.Core.Scheduling.Jobs.SampleJob",
        "previousFireTime": null,
        "nextFireTime": null,
        "lastExecutionFailed": false
    }
  ]
};


const empty: SchedulerStatus = {
  state: SchedulerStateEnum.Stopped,
  serverTime: new Date(),
  jobs: []
};

